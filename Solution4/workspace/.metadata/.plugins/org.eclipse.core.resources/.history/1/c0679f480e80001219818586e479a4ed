public class Main {
	public static void main(String[] args) {
		String pairs = "", seqlib, m, dpmatrices, mode, format;
		int go = -12, ge = -1;
		boolean nw = false, check = false;
		for (int i = 0; i < args.length; i++) {
			try {
				if (args[i].equals("--pairs"))
					pairs = args[++i];
				else if (args[i].equals("--seqlib"))
					seqlib = args[++i];
				else if (args[i].equals("-m"))
					m = args[++i];
				else if (args[i].equals("-dpmatrices"))
					dpmatrices = args[++i];
				else if (args[i].equals("-mode"))
					mode = args[++i];
				else if (args[i].equals("-format"))
					format = args[++i];
				else if (args[i].equals("--go")) {
					try {
						go = Integer.parseInt(args[++i]);
					} catch (NumberFormatException e) {
						System.out.println("wrong format after -go");
					}
				} else if (args[i].equals("--ge")) {
					try {
						ge = Integer.parseInt(args[++i]);
					} catch (NumberFormatException e) {
						System.out.println("wrong format after -ge");
					}
				} else if (args[i].equals("--nw"))
					nw = true;
				else if (args[i].equals("--check"))
					check = true;
			} catch (ArrayIndexOutOfBoundsException e) {
				System.out.println("missing argument after " + args[i-1]);
			}
		}
		System.out.println("pairs: " + pairs);
		System.out.println("nw: " + nw);
		System.out.println("go: " + go);

		// Utilities u = new Utilities();
		// u.readMatrix();
	}
}