import java.io.*;

public class Utilities {
	public static double[][] readMatrix(String path) {
		double[][] matrix = new double[20][20];
		int nrow = 0, ncol = 0;
		try {
			String line;
			BufferedReader br = new BufferedReader(new FileReader(path));
			while ((line = br.readLine()) != null) {
				if(line.length() > 6 && line.substring(0, 6).equals("NUMROW")){
					String[] l = line.split("\\s+");
					nrow = Integer.parseInt(l[1]);
					
				}
				else if(line.length() > 6 && line.substring(0, 6).equals("NUMCOL")){
					String[] l = line.split("\\s+");
					ncol = Integer.parseInt(l[1]);
					System.out.println(l[1]);
				}
			}
			String[] mlines = new String[20];
			int i = 0;
			while ((line = br.readLine()) != null) {
				if(line.length() > 6 && line.substring(0, 6).equals("MATRIX")){
					String[] l = line.split("\\s+");
					for(int j = 1; j < l.length; j++){
						matrix[i][j-1] = Double.parseDouble(l[j]+"0");
						matrix[j-1][i] = matrix[i][j-1];
					}
					i++;
				}
			}
		} catch (FileNotFoundException fne) {
			System.out.println("File not found.");
			fne.printStackTrace();
		} catch (IOException ioe) {
			System.out.println("IOException occured.");
		}
		return matrix;
	}
	
	public static String[] getIndices(String path){
		String[] indices = new String[2];
		try {
			String line;
			BufferedReader br = new BufferedReader(new FileReader(path));
			String[] mlines = new String[2];
			while ((line = br.readLine()) != null) {
				if(line.length() > 8 && line.substring(0, 8).equals("ROWINDEX")){
					String[] l = line.split("\\s+");
					indices[0] = l[1];
				} 
				else if(line.length() > 8 && line.substring(0, 8).equals("COLINDEX")){
					String[] l = line.split("\\s");
					indices[1] = l[1];
				} 
				
			}
		} catch (FileNotFoundException fne) {
			System.out.println("File not found.");
			fne.printStackTrace();
		} catch (IOException ioe) {
			System.out.println("IOException occured.");
		}
		
		return indices;
	}

}