import java.io.*;

public class Utilities {
	public static double[][] readMatrix() {
		double[][] matrix = new double[20][20];
		try {
			String line;
			BufferedReader br = new BufferedReader(new FileReader("/home/sch/schmidtju/blosum62.mat"));
			String[] mlines = new String[20];
			int i = 0;
			while ((line = br.readLine()) != null) {
				if(line.length() > 6 && line.substring(0, 6).equals("MATRIX")){
					String[] l = line.split("\\s+");
					for(int j = 1; j < l.length; j++){
						matrix[i][j-1] = Double.parseDouble(l[j]+"0");
						matrix[j-1][i] = matrix[i][j-1];
					}
					i++;
				}
			}
		} catch (FileNotFoundException fne) {
			System.out.println("File not found.");
			fne.printStackTrace();
		} catch (IOException ioe) {
			System.out.println("IOException occured.");
		}
		for(int i = 0; i < 20; i++){
			for(int j = 0; j < 20; j++){
				System.out.print(matrix[i][j]+"\t");
			}
			System.out.println();
		}
		return matrix;
	}
	
	public static int aatoInt(char aa){
		switch(aa){
			case 'A': return 0;
			case 'R': return 1;
			case 'N': return 2;
			case 'D': return 3;
			case 'C': return 4;
			case 'Q': return 5;
			case 'E': return 6;
			case 'G': return 7;
			case 'H': return 8;
			case 'I': return 9;
			case 'L': return 10;
			case 'K': return 11;
			case 'M': return 12;
			case 'F': return 13;
			case 'P': return 14;
			case 'S': return 15;
			case 'T': return 16;
			case 'W': return 17;
			case 'Y': return 18;
			case 'V': return 19;
			default: return -1;
			
		}
	}

}